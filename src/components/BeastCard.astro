---
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import RollableDice from "./RollableDice.astro";

interface Props {
    beast: CollectionEntry<'bestiary'>;
}

const { beast } = Astro.props;
const { data } = beast;

// Get type title
const typeEntry = await getEntry(data.type);
const typeTitle = typeEntry.data.title;

// Get speeds
const speedsData = await Promise.all(
    data.speeds.map(async (speed) => {
        const entry = await getEntry(speed.type);
        return `${speed.value} метра ${entry.data.title}`;
    })
);
const joinedSpeeds = speedsData.join("; ");

// Get resistances
const resistancesData = data.resistances
    ? await Promise.all(
          data.resistances.map(async (resistance) => {
              const entry = await getEntry(resistance);
              return entry.data.title;
          })
      )
    : null;
const joinedResistances = resistancesData?.join(", ");

// Get immunities
const immunitiesData = data.immunities
    ? await Promise.all(
          data.immunities.map(async (immunity) => {
              const entry = await getEntry(immunity);
              return entry.data.title;
          })
      )
    : null;
const joinedImmunities = immunitiesData?.join(", ");

// Get vulnerabilities
const vulnerabilitiesData = data.vulnerabilities
    ? await Promise.all(
          data.vulnerabilities.map(async (vulnerability) => {
              const entry = await getEntry(vulnerability);
              return entry.data.title;
          })
      )
    : null;
const joinedVulnerabilities = vulnerabilitiesData?.join(", ");
---

<div class="beast-card">
    <div class="beast-card__header">
        <h1 class="beast-card__title">{data.title}</h1>
        <p class="beast-card__type">{typeTitle}</p>
    </div>
    
    <div class="beast-card__stats">
        <div class="beast-card__stat">
            <span class="beast-card__stat-label">Порог защиты</span>
            <span class="beast-card__stat-value">{data.armorClass}</span>
        </div>
        <div class="beast-card__stat">
            <span class="beast-card__stat-label">Здоровье</span>
            <span class="beast-card__stat-value">
                <RollableDice formula={data.health} />
            </span>
        </div>
        <div class="beast-card__stat">
            <span class="beast-card__stat-label">Скорость</span>
            <span class="beast-card__stat-value">{joinedSpeeds}</span>
        </div>
    </div>

    {(joinedResistances || joinedImmunities || joinedVulnerabilities) && (
        <div class="beast-card__defenses">
            {joinedResistances && (
                <div class="beast-card__defense">
                    <span class="beast-card__defense-label">Сопротивления:</span>
                    <span class="beast-card__defense-value">{joinedResistances}</span>
                </div>
            )}
            {joinedImmunities && (
                <div class="beast-card__defense">
                    <span class="beast-card__defense-label">Иммунитеты:</span>
                    <span class="beast-card__defense-value">{joinedImmunities}</span>
                </div>
            )}
            {joinedVulnerabilities && (
                <div class="beast-card__defense">
                    <span class="beast-card__defense-label">Уязвимости:</span>
                    <span class="beast-card__defense-value">{joinedVulnerabilities}</span>
                </div>
            )}
        </div>
    )}
</div>

<style lang="scss">
.beast-card {
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    &__header {
        margin-bottom: 1.5rem;
    }

    &__title {
        font-size: 2rem;
        margin: 0;
        color: var(--heading-color);
    }

    &__type {
        margin: 0.5rem 0 0;
        color: var(--text-muted);
        font-style: italic;
    }

    &__stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    &__stat {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    &__stat-label {
        font-size: 0.875rem;
        color: var(--text-muted);
        text-transform: uppercase;
    }

    &__stat-value {
        font-size: 1.25rem;
        font-weight: 600;
    }

    &__defenses {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    &__defense {
        display: flex;
        gap: 0.5rem;
        align-items: baseline;
    }

    &__defense-label {
        font-weight: 600;
        color: var(--text-muted);
        min-width: 120px;
    }

    &__defense-value {
        color: var(--text-color);
    }
}
</style>
